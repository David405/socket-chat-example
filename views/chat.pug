html
  head
    title
         | socket.IO chat
    link(rel='stylesheet', href='https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css')
    style(type="text/css").
      body { margin: 0; padding-bottom: 3rem; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif; }

      #form { background: rgba(0, 0, 0, 0.15); padding: 0.25rem; position: fixed; bottom: 0; left: 0; right: 0; display: flex; height: 3rem; box-sizing: border-box; backdrop-filter: blur(10px); }
      #input { border: none; padding: 0 1rem; flex-grow: 1; border-radius: 2rem; margin: 0.25rem; }
      #input:focus { outline: none; }
      #form > button { background: #333; border: none; padding: 0 1rem; margin: 0.25rem; border-radius: 3px; outline: none; color: #fff; }

      #history { list-style-type: none; margin: 0; padding: 0; }
      #messages { list-style-type: none; margin: 0; padding: 0; }
      #history > li { padding: 0.5rem 1rem; }
      #messages > li { padding: 0.5rem 1rem; }
      #history > li:nth-child(odd) { background: #efefef; }
      #messages > li:nth-child(odd) { background: #efefef; }
    script.
        function getHistory() {
        var history = document.getElementById('history');
        var authorID = "60301f899fa6d029d51f03d2"
        var recipientID = "60302263faf70c2cd82392ac"
        fetch(`http://localhost:3000/chat/${authorID}/${recipientID}/all`)
        .then((resp) => resp.json())
        .then(function(data) {
           var chatHistory = data.message;
           return chatHistory.map(function(hst) {
               let item = document.createElement('li');
               item.innerHTML = `${hst.content}`;
               history.appendChild(item);
               console.log(item.innerHTML)
          })
        })
        .catch(function(error) {
          console.log(error);
        });
      }
  body(onload="getHistory();")
    h3.
      Chat history
    ul(id="history")
    ul(id="messages")
    form(id="form" action="")
      input(id="input" value="" autocomplete="off")
      
    script(src="/socket.io/socket.io.js")

    script.
      var socket = io();

      var messages = document.getElementById('messages');
      var form = document.getElementById('form');
      var input = document.getElementById('input');

      form.addEventListener('submit', function(e) {
        e.preventDefault();
        if (input.value) {
          socket.emit('chat message', input.value);
          const data = { content: input.value };
                var authorID = "60301f899fa6d029d51f03d2"
                var recipientID = "60302263faf70c2cd82392ac"
                fetch(`http://localhost:3000/chat/${authorID}/${recipientID}/submit`, {
                  method: 'POST',
                  headers: {
                    'Content-Type': 'application/json',
                  },
                  body: JSON.stringify(data)
                })
                .then(response => response.json())
                .then(data => {
                  console.log('Success:', data);
                })
                .catch((error) => {
                  console.error('Error:', error);
                });

          input.value = '';
        }
      });

      socket.on('chat message', function(msg) {
        var item = document.createElement('li');
        item.textContent = msg;
        messages.appendChild(item);
        window.scrollTo(0, document.body.scrollHeight);
      });
  
